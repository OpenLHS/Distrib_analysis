############### VERTICALLY DISTRIBUTED LOGISTIC REGRESSION ####################
## License: https://creativecommons.org/licenses/by-nc-sa/4.0/
## Copyright: GRIIS / Université de Sherbrooke
# Set number of nodes
K <- 2
# If you want to manually set the parameter lambda, specify value here.
# If you do so, please refer to article to ensure adequate settings.
# Else, an automated value that complies with the assumptions of the method will be assigned.
lambda <- -1
# No modifications should be required below this point
######################################################
# Allow to set working directory automatically
library(this.path)
# Retrieve current working directory
setwd(this.dir())
examplefilepath <- paste0(getwd(), "/")
# Retrieve source code
setwd("../../example_handler")
source("PoolingOrg_code_log-regV_ex.R")
# Run pooled code
vert_logistic_regression_nonpenalized_example_pooled_handler(man_nnodes = K, man_lambda = lambda, expath = examplefilepath)
## Remove all environment variables.
## If you want to see the variable that were create, simply don't execute that line (and clear them manually after)
rm(list = ls())
setwd("~/GitHub/Elo_Propre/Distrib_analysis/Vertically_distributed_analysis/logistic_regression_nonpenalized/Logistic_regression_modelling/examples/random_data_same_folder/pooled")
############### VERTICALLY DISTRIBUTED LOGISTIC REGRESSION ####################
## License: https://creativecommons.org/licenses/by-nc-sa/4.0/
## Copyright: GRIIS / Université de Sherbrooke
# Allow to set working directory automatically
library(this.path)
# If you want to manually set the parameter lambda, specify value here.
# If you do so, please refer to article to ensure adequate settings.
# Else, an automated value that complies with the assumptions of the method will be assigned.
lambda <- -1
# No modifications should be required below this point
######################################################
# Retrieve current working directory
setwd(this.dir())
examplefilepath <- paste0(getwd(), "/")
# Retrieve source code
setwd("../../example_handler")
source("Data_node_call_log-regV_ex.R")
source("Coord_node_call_iter_log-regV_ex.R")
# Run data node code
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 1, expath = examplefilepath)
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 2, expath = examplefilepath)
# Run coordination node code
vert_logistic_regression_nonpenalized_example_coordnode_handler(man_lambda = lambda, expath = examplefilepath)
# Run data node code
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 1, expath = examplefilepath)
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 2, expath = examplefilepath)
## Remove all environment variables.
## If you want to see the variable that were create, simply don't execute that line (and clear them manually after)
rm(list = ls())
setwd("~/GitHub/Elo_Propre/Distrib_analysis/Vertically_distributed_analysis/logistic_regression_nonpenalized/Logistic_regression_modelling/examples/random_data_same_folder/distributed")
# Allow to set working directory automatically
library(this.path)
# If you want to manually set the parameter lambda, specify value here.
# If you do so, please refer to article to ensure adequate settings.
# Else, an automated value that complies with the assumptions of the method will be assigned.
lambda <- -1
# Retrieve current working directory
setwd(this.dir())
examplefilepath <- paste0(getwd(), "/")
# Retrieve source code
setwd("../../example_handler")
source("Data_node_call_log-regV_ex.R")
source("Coord_node_call_iter_log-regV_ex.R")
# Run data node code
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 1, expath = examplefilepath)
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 2, expath = examplefilepath)
# Run coordination node code
vert_logistic_regression_nonpenalized_example_coordnode_handler(man_lambda = lambda, expath = examplefilepath)
# Run data node code
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 1, expath = examplefilepath)
setwd("~/GitHub/Elo_Propre/Distrib_analysis/Vertically_distributed_analysis/logistic_regression_nonpenalized/Logistic_regression_modelling/examples/random_data_same_folder/distributed")
vert_logistic_regression_nonpenalized_example_datenode_handler(nodeid = 2, expath = examplefilepath)
setwd("~/GitHub/Elo_Propre/Distrib_analysis/Vertically_distributed_analysis/logistic_regression_nonpenalized/Data_preprocessing/ResponseNode_Split/examples/random_data_same_folder")
############### VERTICALLY DISTRIBUTED LOGISTIC REGRESSION ####################
## License: https://creativecommons.org/licenses/by-nc-sa/4.0/
## Copyright: GRIIS / Université de Sherbrooke
# Allow to set working directory automatically
library(this.path)
# No modifications should be required below this point
######################################################
# Retrieve current working directory
setwd(this.dir())
examplefilepath <- paste0(getwd(), "/")
# Retrieve source code
setwd("../example_handler")
source("Response_node_call_log-regV_ex.R")
# Run response node code
vert_logistic_regression_nonpenalized_example_response_handler(nodeid = 1, expath = examplefilepath)
## Remove all environment variables.
## If you want to see the variable that were create, simply don't execute that line (and clear them manually after)
rm(list = ls())
setwd("~/GitHub/Elo_Propre/Distrib_analysis/Vertically_distributed_analysis/logistic_regression_nonpenalized/Data_preprocessing/ResponseNode_Split/examples/random_data_same_folder")
